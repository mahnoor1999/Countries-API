{"version":3,"sources":["components/CountriesItem/CountriesItem.js","service.js","components/SortCountries/SortCountries.js","components/CountriesHeader/CountriesHeader.js","App.js","reportWebVitals.js","index.js"],"names":["CoutriesItem","InputValue","useState","countries","updateCountries","useEffect","fetch","method","headers","then","response","json","data","catch","err","console","log","information","listOfCountries","map","country","countryInUpperCase","name","toUpperCase","inputInUpperCase","includes","className","Upper","region","population","area","demonym","SortCountries","changeValue","placeholder","type","value","onChange","event","target","CountriesHeader","React","CountriesItem","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNA6DeA,EA1DM,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACFC,mBAAS,IADP,mBAChCC,EADgC,KACrBC,EADqB,KAEvCC,qBAAU,WCJDC,MAAM,8CAA+C,CAC5DC,OAAQ,MACRC,QAAS,CACP,kBAAmB,kCACnB,iBAAkB,wDAGnBC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAWA,KAChBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MDLCL,MAAK,SAACQ,GACnBb,EAAgBa,QAEjB,IAEH,IAAIC,EAAkBf,EAAUgB,KAAI,SAACC,GACnC,IAAIC,EAAqBD,EAAQE,KAAKC,cAClCC,EAAmBvB,EAAWsB,cAClC,GAAIF,EAAmBI,SAASD,GAC9B,OACE,mCACE,qBAAKE,UAAU,8CAAf,SACE,sBAAKA,UAAU,6CAAf,UACE,oBAAIA,UAAU,oEAAd,SACGN,EAAQE,OAEX,qBAAII,UAAU,6BAAd,UACE,+BACG,IACD,sBAAMA,UAAU,gBAAhB,sBACCN,EAAQO,SAEX,+BACG,IACD,sBAAMD,UAAU,gBAAhB,uBACCN,EAAQQ,UAEX,+BACG,IACD,sBAAMF,UAAU,gBAAhB,2BACCN,EAAQS,cAEX,+BACG,IACD,sBAAMH,UAAU,gBAAhB,qBACCN,EAAQU,QAEX,+BACG,IACD,sBAAMJ,UAAU,gBAAhB,wBACCN,EAAQW,wBASzB,OACE,qBAAKL,UAAU,0GAAf,SACGR,KE7CQc,EAXO,SAAC,GAAiC,IAA/B/B,EAA8B,EAA9BA,WAAYgC,EAAkB,EAAlBA,YACnC,OACE,uBACEC,YAAY,SACZC,KAAK,OACLC,MAAOnC,EACPoC,SAAU,SAACC,GAAD,OAAWL,EAAYK,EAAMC,OAAOH,QAC9CV,UAAU,4JCYDc,EAjBS,WAAO,IAAD,EACMC,IAAMvC,SAAS,IADrB,mBACrBD,EADqB,KACTgC,EADS,KAE5B,OACE,sBAAKP,UAAU,8BAAf,UACE,sBAAKA,UAAU,6DAAf,UAEE,oBAAIA,UAAU,6FAAd,qCAGA,cAAC,EAAD,CAAezB,WAAYA,EAAYgC,YAAaA,OAGpD,cAACS,EAAD,CAAezC,WAAYA,QCLpB0C,MARf,WACE,OACE,qBAAKjB,UAAU,MAAf,SACE,cAAC,EAAD,OCOSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c4ac9f5d.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getCountries } from \"../../service\";\r\n\r\nconst CoutriesItem = ({ InputValue }) => {\r\n  const [countries, updateCountries] = useState([]);\r\n  useEffect(() => {\r\n    getCountries().then((information) => {\r\n      updateCountries(information);\r\n    });\r\n  }, []);\r\n\r\n  let listOfCountries = countries.map((country) => {\r\n    let countryInUpperCase = country.name.toUpperCase()\r\n    let inputInUpperCase = InputValue.toUpperCase()\r\n    if (countryInUpperCase.includes(inputInUpperCase)) {\r\n      return (\r\n        <>\r\n          <div className=\" bg-white h-64 rounded-lg hover:bg-gray-200\">\r\n            <div className=\"flex flex-col justify-center align-center \">\r\n              <h2 className=\"font-bold text-xl mb-5 p-2 bg-teal-500 text-white uppercase pl-4 \">\r\n                {country.name}\r\n              </h2>\r\n              <ul className=\"text-gray-700 text-lg pl-4\">\r\n                <li>\r\n                  {\" \"}\r\n                  <span className=\"font-semibold\"> Upper: </span>\r\n                  {country.Upper}\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  <span className=\"font-semibold\"> Region: </span>\r\n                  {country.region}\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  <span className=\"font-semibold\"> Population: </span>\r\n                  {country.population}\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  <span className=\"font-semibold\"> Area: </span>\r\n                  {country.area}\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  <span className=\"font-semibold\"> Demonym: </span>\r\n                  {country.demonym}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  });\r\n  return (\r\n    <div className=\"grid grid-cols-1 sm:grid-cols-2  md:grid-cols-2 lg:grid-cols-3  gap-6   px-6 sm:px-8 md:px-12 lg:px-20 \">\r\n      {listOfCountries}\r\n    </div>\r\n  );\r\n};\r\nexport default CoutriesItem;\r\n","export const getCountries = () => {\r\n    return fetch(\"https://restcountries-v1.p.rapidapi.com/all\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"x-rapidapi-host\": \"restcountries-v1.p.rapidapi.com\",\r\n      \"x-rapidapi-key\": \"ff63aadademsh9ca20b716eb5dc8p112f13jsna3ea6fa0a9a3\",\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => (data))\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}","import React from \"react\";\r\nconst SortCountries = ({ InputValue, changeValue }) => {\r\n  return (\r\n    <input\r\n      placeholder=\"Search\"\r\n      type=\"text\"\r\n      value={InputValue}\r\n      onChange={(event) => changeValue(event.target.value)}\r\n      className=\"shadow appearance-none border rounded mr-2  py-2 pr-0 pl-1 sm:px-2 md:px-2 lg:px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n    />\r\n  );\r\n};\r\nexport default SortCountries;\r\n","import React from \"react\";\r\nimport CountriesItem from \"../CountriesItem/CountriesItem\";\r\nimport SortCountries from \"../SortCountries/SortCountries\";\r\nconst CountriesHeader = () => {\r\n  const [InputValue, changeValue] = React.useState(\"\");\r\n  return (\r\n    <div className=\"bg-yellow-400 h-full pb-64 \">\r\n      <div className=\"mb-10 flex justify-around items-center w-full bg-pink-600 \">\r\n       \r\n        <h1 className=\"text-2xl sm:text-3xl md:text-3xl lg:text-4xl font-black  px-2 py-3  text-white text-center\">\r\n         Know About Your Country\r\n        </h1>\r\n        <SortCountries InputValue={InputValue} changeValue={changeValue} />\r\n      </div>\r\n\r\n        <CountriesItem InputValue={InputValue} />\r\n      \r\n    </div>\r\n  );\r\n};\r\nexport default CountriesHeader;\r\n","import CountriesHeader from \"./components/CountriesHeader/CountriesHeader\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CountriesHeader />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}